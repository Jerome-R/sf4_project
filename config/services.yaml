# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

# to get all services use the command line : php bin/console debug:autowiring

parameters:
    locale: 'en'
    languages: ['en','fr','zh']

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind: ~             # Bind to all services arguments

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Events listener
    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    App\EventListener\RequestListener:
        arguments:
            $security: '@Symfony\Component\Security\Core\Security'
            $languages: '%languages%'
            $defaultLanguage: '%locale%'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request' }

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\AppController:
        arguments:
            $mail_builder: '@App\Service\MailBuilder'

    App\Controller\SecurityController:
        arguments:
            $validator: '@Symfony\Component\Validator\Validator\ValidatorInterface'
            $mail_builder: '@App\Service\MailBuilder'
            $random_string: '@App\Service\RandomString'
            $security: '@Symfony\Component\Security\Core\Security'

    App\Controller\UserController:
        arguments:
            $validator: '@Symfony\Component\Validator\Validator\ValidatorInterface'
            $random_string: '@App\Service\RandomString'
            #$dt_query: '@App\Service\DataTablesQuery'
            #$db_host: '%database_host%'
            #$db_name: '%database_name%'
            #$db_user: '%database_user%'
            #$db_password: '%database_password%'
            $db_host: '%env(resolve:db_host)%'
            $db_name: '%env(resolve:db_name)%'
            $db_user: '%env(resolve:db_user)%'
            $db_password: '%env(resolve:db_password)%'

    App\Controller\AdminController:
        arguments:
            $passwordEncoder: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface'

    App\Form\User1Type:
        arguments:
            $security: '@Symfony\Component\Security\Core\Security'

    App\Service\MailBuilder:
        arguments:
            $smtp_host: '%env(smtp_host)%'
            $smtp_user: '%env(smtp_user)%'
            $smtp_password: '%env(smtp_password)%'
            $smtp_port: '%env(smtp_port)%'
            $smtp_encrypt: '%env(smtp_encrypt)%'

    App\Service\PdoService:
        arguments:
            $db_host: '%env(resolve:db_host)%'
            $db_name: '%env(resolve:db_name)%'
            $db_user: '%env(resolve:db_user)%'
            $db_password: '%env(resolve:db_password)%'

    #App\Service\DataTablesQuery:
        #arguments:
            #$pdo: '@App\Service\PdoService'
            #$mail_builder: '@App\Service\MailBuilder'

    App\Service\SSP:
        arguments:


    App\Service\RandomString:
        arguments:

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

    elfinderRoutes\:
        resource: 'routes\elfinder.yaml'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #App\Service\EmailService\:
        #ressource: '../src/Service'
